let SessionLoad = 1
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd C:/Users/LUCAS/AppData/Local/nvim
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
let s:shortmess_save = &shortmess
if &shortmess =~ 'A'
  set shortmess=aoOA
else
  set shortmess=aoO
endif
badd +1 pack/volt/opt/plugins/colors/voltred.lua
badd +310 pack/volt/start/plugins/lua/volt/substitute.lua
badd +4 test_substitute.lua
badd +1 highlight.ran
badd +1 pack/volt/start/plugins/lua/volt/fold.lua
badd +200 ./init.lua
argglobal
%argdel
edit pack/volt/start/plugins/lua/volt/substitute.lua
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 96 + 96) / 193)
exe 'vert 2resize ' . ((&columns * 96 + 96) / 193)
argglobal
balt test_substitute.lua
setlocal fdm=expr
setlocal fde=v:lua.volt_fold_expr(v:lnum)
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
247
normal! zo
250
normal! zo
254
normal! zo
254
normal! zo
264
normal! zo
292
normal! zo
293
normal! zo
296
normal! zo
297
normal! zo
308
normal! zo
311
normal! zo
313
normal! zo
319
normal! zo
let s:l = 297 - ((34 * winheight(0) + 22) / 45)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 297
normal! 053|
wincmd w
argglobal
if bufexists(fnamemodify("test_substitute.lua", ":p")) | buffer test_substitute.lua | else | edit test_substitute.lua | endif
if &buftype ==# 'terminal'
  silent file test_substitute.lua
endif
balt pack/volt/start/plugins/lua/volt/substitute.lua
setlocal fdm=expr
setlocal fde=v:lua.volt_fold_expr(v:lnum)
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=1
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 4 - ((3 * winheight(0) + 22) / 45)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 4
normal! 017|
wincmd w
exe 'vert 1resize ' . ((&columns * 96 + 96) / 193)
exe 'vert 2resize ' . ((&columns * 96 + 96) / 193)
tabnext 1
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0 && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20
let &shortmess = s:shortmess_save
let &winminheight = s:save_winminheight
let &winminwidth = s:save_winminwidth
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
